{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/Footer.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckOutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","screens/ProductCreateScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","USER","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Footer","Container","Row","Col","className","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","collapseOnSelect","expand","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Rating","text","color","style","Product","props","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","split","console","log","Pagination","Array","keys","active","listProducts","listProductDetails","createProduct","post","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","disabled","length","review","createdAt","substring","productId","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckOutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","ProductCreateScreen","createProductHandler","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.33b033aa.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { \r\n    productListReducers, \r\n    productDetailsReducers, \r\n    productDeleteReducers,\r\n    productCreateReducers,\r\n    productUpdateReducers,\r\n    productReviewCreateReducers,\r\n    productTopRatedReducers,\r\n} from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { \r\n    userLoginReducers, \r\n    userRegisterReducers, \r\n    userDetailsReducers, \r\n    userUpdateProfileReducers, \r\n    userListReducers,\r\n    userDeleteReducers,\r\n    userUpdateReducers,\r\n } from './reducers/userReducers';\r\nimport { \r\n    orderCreateReducer, \r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n } from './reducers/orderReducers';\r\n\r\nconst reducer = combineReducers({\r\n    productList : productListReducers,\r\n    productDetails : productDetailsReducers, \r\n    productDelete:productDeleteReducers,\r\n    productCreate:productCreateReducers,\r\n    productUpdate:productUpdateReducers,\r\n    productReviewCreate:productReviewCreateReducers,\r\n    productTopRated:productTopRatedReducers,\r\n\r\n    cart : cartReducer,\r\n    userLogin: userLoginReducers,\r\n    userRegister : userRegisterReducers,\r\n    userDetails: userDetailsReducers,\r\n    userUpdateProfile: userUpdateProfileReducers,\r\n    userList:userListReducers,\r\n    userDelete:userDeleteReducers,\r\n    userUpdate:userUpdateReducers,\r\n\r\n    orderCreate:orderCreateReducer,\r\n    orderDetails:orderDetailsReducer,\r\n    orderPay:orderPayReducer,\r\n    orderListMy:orderListMyReducer,\r\n    orderList:orderListReducer,\r\n    orderDeliver:orderDeliverReducer,\r\n    \r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    cart:{\r\n         cartItems: cartItemsFromStorage,\r\n         shippingAddress: shippingAddressFromStorage,\r\n        },\r\n    userLogin:{userInfo: userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL, \r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL, \r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL, \r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL, \r\n    PRODUCT_CREATE_RESET, \r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL, \r\n    PRODUCT_CREATE_REVIEW_RESET, \r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n } from '../constants/productConstants';\r\n\r\n\r\n\r\nexport const productListReducers = (state={products:[]},action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: []}\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                products: action.payload.products, \r\n                page: action.payload.page, \r\n                pages: action.payload.pages\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n\r\n}\r\nexport const productDetailsReducers = (state={product:{reviews:[]}},action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state}\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload}\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducers = (state={},action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true}\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true}\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducers = (state={},action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true}\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product:action.payload}\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducers = (state={product:{}},action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true}\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product:action.payload}\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        case PRODUCT_UPDATE_RESET:\r\n            return {product:{}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productReviewCreateReducers = (state={},action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true}\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true}\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducers = (state={products:[]},action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products:[]}\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products:action.payload}\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM, \r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    \r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants';\r\n\r\n\r\n\r\n\r\nexport const cartReducer = (state={cartItems:[], shippingAddress:{}}, action) =>{\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if(existItem){\r\n                return{\r\n                    ...state,\r\n                cartItems: state.cartItems.map(x =>\r\n                    x.product === existItem.product ? item : x\r\n                    )\r\n                }\r\n            }else{\r\n                return{\r\n                    ...state,\r\n                cartItems: [...state.cartItems, item]\r\n                }\r\n                \r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return{ \r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return{ \r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return{ \r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return{ \r\n                ...state,\r\n                cartItems: []\r\n            }\r\n        default:\r\n            return state            \r\n    }\r\n}","import { USER_LOGIN_REQUEST,\r\n        USER_LOGIN_SUCCESS,\r\n        USER_LOGIN_FAIL,\r\n\r\n        USER_LOGOUT,\r\n\r\n        USER_REGISTER_REQUEST,\r\n        USER_REGISTER_SUCCESS,\r\n        USER_REGISTER_FAIL,\r\n\r\n        USER_DETAILS_REQUEST,\r\n        USER_DETAILS_SUCCESS,\r\n        USER_DETAILS_FAIL,\r\n        USER_DETAILS_RESET,\r\n\r\n        USER_UPDATE_PROFILE_REQUEST,\r\n        USER_UPDATE_PROFILE_SUCCESS,\r\n        USER_UPDATE_PROFILE_FAIL,\r\n        USER_UPDATE_PROFILE_RESET,\r\n\r\n        USER_LIST_REQUEST,\r\n        USER_LIST_SUCCESS,\r\n        USER_LIST_FAIL,\r\n        USER_LIST_RESET,\r\n\r\n        USER_DELETE_REQUEST,\r\n        USER_DELETE_SUCCESS,\r\n        USER_DELETE_FAIL,\r\n\r\n        USER_UPDATE_REQUEST,\r\n        USER_UPDATE_SUCCESS,\r\n        USER_UPDATE_FAIL,\r\n        USER_UPDATE_RESET,\r\n} from '../constants/userConstants';\r\n\r\n\r\nexport const userLoginReducers = (state={},action) =>{\r\n    switch(action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true}\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload}\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducers = (state={},action) =>{\r\n    switch(action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true}\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload}\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDetailsReducers = (state={user:{}},action) =>{\r\n    switch(action.type){\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true}\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload}\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        case USER_DETAILS_RESET:\r\n            return { user:{}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducers = (state={},action) =>{\r\n    switch(action.type){\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {loading: true}\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success:true, userInfo: action.payload}\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload}\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return{}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const userListReducers = (state={users:[]},action) =>{\r\n    switch(action.type){\r\n        case USER_LIST_REQUEST:\r\n            return {loading: true}\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload}\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload}\r\n\r\n        case USER_LIST_RESET:\r\n            return{users:[]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducers = (state={},action) =>{\r\n    switch(action.type){\r\n        case USER_DELETE_REQUEST:\r\n            return {loading: true}\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true}\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducers = (state={user:{}},action) =>{\r\n    switch(action.type){\r\n        case USER_UPDATE_REQUEST:\r\n            return {loading: true}\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true}\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        case USER_UPDATE_RESET:\r\n            return {USER:{}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    ORDER_CREATE_REQUEST, \r\n    ORDER_CREATE_SUCCESS, \r\n    ORDER_CREATE_FAIL ,\r\n    \r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST, \r\n    ORDER_PAY_SUCCESS, \r\n    ORDER_PAY_FAIL ,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST, \r\n    ORDER_LIST_MY_SUCCESS, \r\n    ORDER_LIST_MY_FAIL ,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST, \r\n    ORDER_LIST_SUCCESS, \r\n    ORDER_LIST_FAIL ,\r\n    \r\n    ORDER_DELIVER_REQUEST, \r\n    ORDER_DELIVER_SUCCESS, \r\n    ORDER_DELIVER_FAIL ,\r\n    ORDER_DELIVER_RESET,\r\n\r\n    } from '../constants/orderConstants';\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n    \r\nexport const orderDetailsReducer = (state = {loading: true, orderItems: [], shippingAddress:{}}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n    \r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n   \r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n   \r\n\r\n    \r\nexport const orderListMyReducer = (state = {orders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders:[]\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n    \r\nexport const orderListReducer = (state = {orders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n      \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n    \r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; Ecommerce</Col>\r\n                </Row> \r\n            </Container>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, {useState} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Form, Button  } from 'react-bootstrap';\r\n\r\nfunction SearchBox() {\r\n    const [ keyword, setKeyword] = useState('')\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        if(keyword){\r\n            history.push(`/?keyword=${keyword}`)\r\n        }else{\r\n            history.push(history.location.pathname)\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) =>setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >Submit</Button> \r\n            \r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import axios from 'axios';\r\nimport { USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n} from '../constants/userConstants';\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) =>{\r\n    try{\r\n        dispatch({\r\n            type:USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers :{\r\n                'Content-type' : 'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post('/api/users/login/',\r\n            {'username':email, 'password':password},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n        \r\n\r\n    } catch (error){\r\n        dispatch({type:USER_LOGIN_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message, \r\n        \r\n        })\r\n    }\r\n }\r\n\r\n\r\n export const logout = () => async (dispatch) =>{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type: USER_LOGOUT})\r\n    dispatch({type: USER_DETAILS_RESET})\r\n    dispatch({type: ORDER_LIST_MY_RESET})\r\n    dispatch({type: USER_LIST_RESET})\r\n }\r\n\r\n\r\n export const register = (name, email, password) => async (dispatch) =>{\r\n    try{\r\n        dispatch({\r\n            type:USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers :{\r\n                'Content-type' : 'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post('/api/users/register/',\r\n            {'name':name, 'email':email, 'password':password},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type:USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n        \r\n\r\n    } catch (error){\r\n        dispatch({type:USER_REGISTER_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message, \r\n        \r\n        })\r\n    }\r\n }\r\n\r\n\r\n export const getUserDetails = (id) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type:USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin:{userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers :{\r\n                'Content-type' : 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/users/${id}/`,\r\n           config\r\n        )\r\n\r\n        dispatch({\r\n            type:USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n\r\n        \r\n        \r\n\r\n    } catch (error){\r\n        dispatch({type:USER_DETAILS_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message, \r\n        \r\n        })\r\n    }\r\n }\r\n\r\n export const updateUserProfile = (user) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin:{userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers :{\r\n                'Content-type' : 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(`/api/users/profile/update/`,\r\n            user,\r\n           config\r\n        )\r\n\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n        \r\n\r\n    } catch (error){\r\n        dispatch({type:USER_UPDATE_PROFILE_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message, \r\n        \r\n        })\r\n    }\r\n }\r\n\r\n\r\n export const listUsers = () => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type:USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin:{userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers :{\r\n                'Content-type' : 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/users/`,\r\n           config\r\n        )\r\n\r\n        dispatch({\r\n            type:USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n        \r\n\r\n    } catch (error){\r\n        dispatch({type:USER_LIST_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message, \r\n        \r\n        })\r\n    }\r\n }\r\n\r\n\r\n\r\n export const deleteUser = (id) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type:USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin:{userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers :{\r\n                'Content-type' : 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.delete(`/api/users/delete/${id}/`,\r\n           config\r\n        )\r\n\r\n        dispatch({\r\n            type:USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n        \r\n\r\n    } catch (error){\r\n        dispatch({type:USER_DELETE_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message, \r\n        \r\n        })\r\n    }\r\n }\r\n\r\n\r\n\r\n\r\n export const updateUser = (user) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type:USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin:{userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers :{\r\n                'Content-type' : 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(`/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type:USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type:USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n        \r\n\r\n    } catch (error){\r\n        dispatch({type:USER_UPDATE_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message, \r\n        \r\n        })\r\n    }\r\n }\r\n\r\n","import React from 'react';\r\nimport { Navbar, Nav, Container,NavDropdown } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport SearchBox from './SearchBox';\r\nimport { logout } from '../actions/userActions';\r\n\r\nconst Header = () => {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = ()=>{\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" collapseOnSelect expand=\"lg\">\r\n                <Container>\r\n                    <LinkContainer to=\"/\">\r\n                    <Navbar.Brand>Ecommerce</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    \r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    \r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox/>\r\n                        <Nav className=\"ml-auto\">\r\n                        <LinkContainer to=\"/cart\">\r\n                        <Nav.Link> <i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                        </LinkContainer>\r\n                        {userInfo ? (\r\n                            <NavDropdown title={userInfo.name} id='username'>\r\n                                <LinkContainer to=\"/profile\">\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        ):(\r\n                            <LinkContainer to=\"/login\">\r\n                                <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                            </LinkContainer>\r\n                        )}\r\n\r\n\r\n                        {userInfo && userInfo.isAdmin && (\r\n                            <NavDropdown title='Admin' id='adminmenu'>\r\n                                <LinkContainer to=\"/admin/userlist\">\r\n                                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/admin/productlist\">\r\n                                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/admin/orderlist\">\r\n                                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            </NavDropdown>\r\n\r\n                        )}\r\n\r\n                        \r\n                        \r\n                        {/* <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                        </NavDropdown> */}\r\n                        </Nav>\r\n                        {/* <Form inline>\r\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                        <Button variant=\"outline-success\">Search</Button>\r\n                        </Form> */}\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Rating = ({value, text, color}) => {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 1 \r\n                    ? 'fas fa-star'\r\n                    :  value >= 0.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 2 \r\n                    ? 'fas fa-star'\r\n                    :  value >= 1.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 3\r\n                    ? 'fas fa-star'\r\n                    :  value >= 2.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 4 \r\n                    ? 'fas fa-star'\r\n                    :  value >= 3.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 5 \r\n                    ? 'fas fa-star'\r\n                    :  value >= 4.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rating;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from './Rating';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Product = (props) => {\r\n    const {product} = props;\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded \">\r\n           <Link to={`product/${product._id}`}>\r\n           <Card.Img src={product.image}/>\r\n           </Link>\r\n           <Card.Body>\r\n           <Link to={`product/${product._id}`}>\r\n           <Card.Title as=\"div\">\r\n               <strong>{product.name}</strong>\r\n           </Card.Title>\r\n           </Link>\r\n           <Card.Text as=\"div\">\r\n               <div className=\"my-3\">\r\n                    \r\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'}/>\r\n               </div>\r\n           </Card.Text>\r\n           <Card.Text as=\"h3\">\r\n               ${product.price}\r\n           </Card.Text>\r\n           </Card.Body>\r\n           \r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Product;","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation=\"border\" role=\"status\" style={{ \r\n            height: '100px',\r\n            width: '100px',\r\n            margin: 'auto',\r\n            display: 'block'\r\n        }}>\r\n            <span className=\"sr-only\"> Loading...</span>\r\n            \r\n        </Spinner>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({variant, children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    );\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport Pagination from 'react-bootstrap/Pagination'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nfunction Paginate({pages, page, keyword='',isAdmin=false}) {\r\n\r\n    if(keyword){\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n        \r\n    }\r\n    console.log(pages);\r\n    return ( pages > 1 && (\r\n     \r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x)=>(\r\n                <LinkContainer\r\n                    key={x+1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x+1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x+1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x+1 === page}>{x+1}</Pagination.Item>\r\n                    \r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n       \r\n    ) \r\n    );\r\n}\r\n\r\nexport default Paginate;","import axios from 'axios';\r\nimport { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL, \r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL, \r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL, \r\n    PRODUCT_CREATE_RESET, \r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL, \r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n    \r\n } from '../constants/productConstants';\r\n\r\n export const listProducts = (keyword='') => async (dispatch) =>{\r\n    try{\r\n        dispatch({type:PRODUCT_LIST_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/products${keyword}`);\r\n        dispatch({type:PRODUCT_LIST_SUCCESS,\r\n        payload: data\r\n        })\r\n\r\n    } catch (error){\r\n        dispatch({type:PRODUCT_LIST_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message, \r\n        \r\n        })\r\n    }\r\n }\r\n\r\n\r\n export const listTopProducts = () => async (dispatch) =>{\r\n    try{\r\n        dispatch({type:PRODUCT_TOP_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/products/top/`);\r\n        dispatch({type:PRODUCT_TOP_SUCCESS,\r\n        payload: data\r\n        })\r\n\r\n    } catch (error){\r\n        dispatch({type:PRODUCT_TOP_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message, \r\n        \r\n        })\r\n    }\r\n }\r\n\r\n\r\n\r\n export const listProductDetails = (id) => async (dispatch) =>{\r\n    try{\r\n        dispatch({type:PRODUCT_DETAILS_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/products/${id}`);\r\n        dispatch({type:PRODUCT_DETAILS_SUCCESS,\r\n        payload: data\r\n        })\r\n\r\n    } catch (error){\r\n        dispatch({type:PRODUCT_DETAILS_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message, \r\n        \r\n        })\r\n    }\r\n }\r\n\r\n export const deleteProduct = (id) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type:PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin:{userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers :{\r\n                'Content-type' : 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.delete(`/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n        \r\n\r\n        dispatch({\r\n            type:PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error){\r\n        dispatch({type:PRODUCT_DELETE_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message, \r\n        \r\n        })\r\n    }\r\n    }\r\n\r\n export const createProduct = (product) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type:PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin:{userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers :{\r\n                // 'Content-type' : 'application/json',\r\n                'Content-type' : 'multipart/form-data',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(`/api/products/create/`,\r\n            product,\r\n            config\r\n        )\r\n        \r\n\r\n        dispatch({\r\n            type:PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error){\r\n        dispatch({type:PRODUCT_CREATE_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message, \r\n        \r\n        })\r\n    }\r\n    }\r\n\r\n\r\n export const updateProduct = (product) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type:PRODUCT_UPDATE_REQUEST\r\n           \r\n        })\r\n\r\n        const {\r\n            userLogin:{userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers :{\r\n                'Content-type' : 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(`/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        \r\n\r\n        dispatch({\r\n            type:PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type:PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error){\r\n        dispatch({type:PRODUCT_UPDATE_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message, \r\n        \r\n        })\r\n    }\r\n    }\r\n\r\n\r\n export const createProductReview = (productId, review) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type:PRODUCT_CREATE_REVIEW_REQUEST\r\n           \r\n        })\r\n\r\n        const {\r\n            userLogin:{userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers :{\r\n                'Content-type' : 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(`/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        \r\n\r\n        dispatch({\r\n            type:PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n\r\n    } catch (error){\r\n        dispatch({type:PRODUCT_CREATE_REVIEW_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message, \r\n        \r\n        })\r\n    }\r\n    }\r\n","import React, {useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listTopProducts } from '../actions/productActions';\r\n\r\n\r\nfunction ProductCarousel() {\r\n\r\n    const dispatch = useDispatch()\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const {loading, error, products} = productTopRated\r\n\r\n    useEffect(() =>{\r\n        dispatch(listTopProducts())\r\n\r\n    }, [dispatch])\r\n\r\n    return ( loading ? <Loader />\r\n    : error \r\n    ? <Message variant='danger'>{error}</Message>\r\n    : (\r\n        <Carousel pause=\"hover\" className=\"bg-dark\">\r\n            {products.map(product =>(\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid/>\r\n                        <Carousel.Caption className='carousel.caption'>\r\n                            <h4>{product.name} (${product.price})</h4>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n\r\n                </Carousel.Item>\r\n            ))}\r\n\r\n        </Carousel>\r\n    )\r\n    \r\n        \r\n    );\r\n}\r\n\r\nexport default ProductCarousel;","import React, {useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col} from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Paginate from '../components/Paginate';\r\nimport ProductCarousel from '../components/ProductCarousel';\r\nimport { listProducts } from '../actions/productActions';\r\n\r\n\r\n\r\n\r\nconst HomeScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {error, loading, products, page, pages} = productList\r\n    \r\n\r\n    let keyword = history.location.search\r\n    console.log(pages, \"key \", keyword);\r\n\r\n    useEffect(() =>{\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel/>}\r\n            \r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader />\r\n            : error ? <Message variant=\"danger\">{error}</Message>\r\n            : <div>\r\n                <Row>\r\n                    {products.map(product =>(\r\n                        <Col key={product.id} sm={12} md={6} lg={4} xl={3}>\r\n                        <Product product={product}></Product>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n                <Paginate page={page} pages={pages} keyword={keyword}/>\r\n                {/* <h3>hello</h3> */}\r\n            </div>  \r\n        }\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeScreen;","import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, Button, Image, ListGroup, Card, Form } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listProductDetails, createProductReview } from '../actions/productActions';\r\nimport {  PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\r\n\r\n\r\nconst ProductScreen = ({match, history}) => {\r\n\r\n    const [qty, setQty] = useState(1);\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('')\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading:loadingProductReview, \r\n        error:errorProductReview, \r\n        success:successProductReview, \r\n    } = productReviewCreate\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {error, loading, product} = productDetails\r\n\r\n    useEffect(() =>{\r\n        if(successProductReview){\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id,{\r\n                rating,\r\n                comment\r\n            }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ? <Loader />\r\n            : error ? <Message variant=\"danger\">{error}</Message>\r\n            : <div>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Image src={product.image} alt={product.name} fluid/>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h3>{product.name}</h3>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                Price : ${product.price}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                Description : {product.description}\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                \r\n                                <Row>\r\n                                    <Col>Price: </Col>\r\n                                    <Col><strong>${product.price}</strong></Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                \r\n                                <Row>\r\n                                    <Col>Status: </Col>\r\n                                    <Col>\r\n                                    {product.countInStock>0 ? 'In Stock' : 'Out Of Stock'}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {product.countInStock > 0 && (\r\n                            <ListGroup.Item>\r\n                                \r\n                            <Row>\r\n                                <Col>Qty</Col>\r\n                                <Col xs='auto' className='my-1'>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    value={qty}\r\n                                    onChange={(e) => setQty(e.target.value)}\r\n                                >\r\n                                    {\r\n                                        [...Array(product.countInStock).keys()].map((x) => (\r\n                                                <option key={x + 1} value={ x + 1}>\r\n                                                    {x+1}\r\n                                                </option>\r\n                                            ))\r\n\r\n                                    }\r\n                                    \r\n\r\n                                </Form.Control>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item> \r\n                            )}\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                onClick={addToCartHandler} \r\n                                className=\"btn-block\" \r\n                                disabled={product.countInStock ===0} \r\n                                type='button'>\r\n                                    Add to Cart\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                            \r\n                        </ListGroup>\r\n                        </Card>\r\n                \r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <h4>Reviews</h4>\r\n                        {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n                        <ListGroup variant='flush'>\r\n                            {product.reviews.map((review) => (\r\n                                <ListGroup.Item key={review._id}>\r\n                                    <strong>{review.name}</strong>\r\n                                    <Rating value={review.rating} color='#f8e825'/>\r\n                                    <p>{review.createdAt.substring(0,10)}</p>\r\n                                    <p>{review.comment}</p>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                            <ListGroup.Item>\r\n                                <h4>Write a reviews</h4>\r\n                                {loadingProductReview && <Loader/>}\r\n                                {successProductReview && <Message variant='success'>Review submitted</Message>}\r\n                                {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                                {userInfo ? (\r\n                                    <Form onSubmit={submitHandler}>\r\n                                        <Form.Group controlId='rating'>\r\n                                            <Form.Label>Rating</Form.Label>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={rating}\r\n                                                onChange={(e) => setRating(e.target.value)}\r\n                                            >\r\n                                                <option value=''>Select ...</option>\r\n                                                <option value='1'>1 - Poor</option>\r\n                                                <option value='2'>2 - Fair</option>\r\n                                                <option value='3'>3 - Good</option>\r\n                                                <option value='4'>4 - Very Good</option>\r\n                                                <option value='5'>5 - Exellent</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId='comment'>\r\n                                            <Form.Label>Review</Form.Label>\r\n                                            <Form.Control\r\n                                                as='textarea'\r\n                                                row='5'\r\n                                                value={comment}\r\n                                                onChange={(e) => setComment(e.target.value)}\r\n                                            ></Form.Control>\r\n                                        </Form.Group>\r\n                                        <Button \r\n                                            disabled={loadingProductReview}\r\n                                            type='submit'\r\n                                            variant='primary'\r\n                                        >\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Form>\r\n                                ):(\r\n                                    <Message variant='info'>Please <Link to='/login'>login</Link>to write a review</Message>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductScreen;","import axios from 'axios';\r\nimport { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM, \r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    \r\n    CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstants';\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload:{\r\n            product:data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock : data.countInStock,\r\n            qty\r\n        }\r\n\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload:id,\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n\r\n\r\n","import React, { useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, Button, Image, ListGroup, Card, Form } from 'react-bootstrap';\r\nimport Message from '../components/Message';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\n\r\nfunction CartScreen({match, location, history}){\r\n    const productId = match.params.id;\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n    console.log('qty', qty, 'id ',productId);\r\n\r\n    const dispatch = useDispatch();\r\n    const cart = useSelector(state => state.cart);\r\n    const {cartItems} = cart;\r\n    console.log('cartItems', cartItems)\r\n\r\n\r\n    useEffect(() =>{\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n        \r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) =>{\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n\r\n    const checkuthandler = (id) =>{\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ?(\r\n                     <Message variant='info'>\r\n                         Your cart is empty <Link to='/'>Go Back</Link>\r\n                     </Message>\r\n                     ) : (\r\n                         <ListGroup variant='flush'>\r\n                             {cartItems.map( item => (\r\n                                 <ListGroup.Item key={item.product}>\r\n                                     <Row>\r\n                                         <Col md={3}>\r\n                                             <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                         </Col>\r\n                                         <Col md={3}>\r\n                                         <Link to={`/api/product/${item.product}`}>{item.name}</Link>\r\n                                         </Col>\r\n                                         <Col md={2}>\r\n                                             ${item.price}\r\n                                         </Col>\r\n                                         <Col md={3}>\r\n                                         <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n                                                    [...Array(item.countInStock).keys()].map((x) => (\r\n                                                            <option key={x + 1} value={ x + 1}>\r\n                                                                {x+1}\r\n                                                            </option>\r\n                                                        ))\r\n\r\n                                                }\r\n                                                \r\n\r\n                                         </Form.Control>\r\n                                         </Col>\r\n                                         <Col md={1}>\r\n                                             <Button \r\n                                             type=\"button\" \r\n                                             variant=\"light\"\r\n                                             onClick={()=> removeFromCartHandler(item.product)}\r\n                                             >\r\n                                                 <i className=\"fas fa-trash\"></i>\r\n\r\n                                             </Button>\r\n                                         </Col>\r\n                                     </Row>\r\n                                 </ListGroup.Item>\r\n                             ))}\r\n                         </ListGroup>\r\n                     )\r\n                }\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc,item) => acc + item.qty,0)}) Items</h2>\r\n                            ${cartItems.reduce((acc,item) => acc + item.qty * item.price,0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                        type=\"button\"\r\n                        className=\"btn-block\"\r\n                        disabled={cartItems.length === 0}\r\n                        onClick={checkuthandler}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default CartScreen;","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst FormContainer = ({children}) => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                 {children}\r\n                </Col>\r\n            </Row>\r\n            \r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default FormContainer;","import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Form,Row, Col } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { login } from '../actions/userActions';\r\n\r\nconst LoginScreen = ({location, history}) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {error, loading, userInfo} = userLogin\r\n\r\n    useEffect(() =>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n\r\n    }, [history, userInfo,redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email,password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                    type='email'\r\n                    placeholder='Enter Email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                    type='password'\r\n                    placeholder='Enter Password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                     to={redirect? `/register?redirect=${redirect}`: '/register'}>\r\n                         Register\r\n                         </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default LoginScreen;","import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Form,Row, Col } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { register } from '../actions/userActions';\r\n\r\nconst RegisterScreen = ({location, history}) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const {error, loading, userInfo} = userRegister\r\n\r\n    useEffect(() =>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n\r\n    }, [history, userInfo,redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword){\r\n            setMessage('Password do not match')\r\n        }else{\r\n            dispatch(register(name,email,password))\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Register</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type='name'\r\n                    placeholder='Enter Name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type='email'\r\n                    placeholder='Enter Email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type='password'\r\n                    placeholder='Enter Password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                    </Form.Group>\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type='confirmPassword'\r\n                    placeholder='Enter confirm Password'\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n            <Row className='my-3'>\r\n                <Col>\r\n                    Have an accoubt? <Link\r\n                     to={redirect? `/login?redirect=${redirect}`: '/login'}>\r\n                         Sign In\r\n                         </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default RegisterScreen;","import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Form,Row, Col, Table } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\nimport { listMyOrders } from '../actions/orderActions';\r\n\r\nconst ProfileScreen = ({history}) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetails\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const {success} = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const {loading:loadingOrders, error:errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() =>{\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }else{\r\n            if( !user || !user.name || success || userInfo._id !== user._id){\r\n                dispatch({type:USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n\r\n        }\r\n\r\n    }, [dispatch, history, userInfo,user,success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword){\r\n            setMessage('Password do not match')\r\n        }else{\r\n            dispatch(updateUserProfile({\r\n                'id':user._id,\r\n                'name':name,\r\n                'email':email,\r\n                'password': password,\r\n            }))\r\n            setMessage('')\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                \r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader/>}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                       \r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                        \r\n                        type='confirmPassword'\r\n                        placeholder='Enter confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My orders</h2>\r\n                { loadingOrders ? (\r\n                    <Loader/>\r\n                ): errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ):(\r\n                    <Table striped responsive  className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order =>(\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0,10)}</td>\r\n                                    <td> ${order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col> \r\n            \r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default ProfileScreen;","import axios from 'axios';\r\nimport {\r\n    ORDER_CREATE_REQUEST, \r\n    ORDER_CREATE_SUCCESS, \r\n    ORDER_CREATE_FAIL ,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST, \r\n    ORDER_PAY_SUCCESS, \r\n    ORDER_PAY_FAIL ,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST, \r\n    ORDER_LIST_MY_SUCCESS, \r\n    ORDER_LIST_MY_FAIL ,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST, \r\n    ORDER_LIST_SUCCESS, \r\n    ORDER_LIST_FAIL ,\r\n\r\n    ORDER_DELIVER_REQUEST, \r\n    ORDER_DELIVER_SUCCESS, \r\n    ORDER_DELIVER_FAIL ,\r\n    ORDER_DELIVER_RESET,\r\n\r\n\r\n    } from '../constants/orderConstants';\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type:ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin:{userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers :{\r\n                'Content-type' : 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(`/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n        \r\n\r\n        dispatch({\r\n            type:ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type:CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error){\r\n        dispatch({type:ORDER_CREATE_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message, \r\n        \r\n        })\r\n    }\r\n    }\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type:ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin:{userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers :{\r\n                'Content-type' : 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/orders/${id}/`,\r\n            config\r\n        )\r\n        \r\n\r\n        dispatch({\r\n            type:ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error){\r\n        dispatch({type:ORDER_DETAILS_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message, \r\n        \r\n        })\r\n    }\r\n    }\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type:ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin:{userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers :{\r\n                'Content-type' : 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(`/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n        \r\n\r\n        dispatch({\r\n            type:ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error){\r\n        dispatch({type:ORDER_PAY_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message, \r\n        \r\n        })\r\n    }\r\n    }\r\n\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type:ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin:{userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers :{\r\n                'Content-type' : 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(`/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n        \r\n\r\n        dispatch({\r\n            type:ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error){\r\n        dispatch({type:ORDER_DELIVER_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message, \r\n        \r\n        })\r\n    }\r\n    }\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type:ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin:{userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers :{\r\n                'Content-type' : 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/orders/myorders/`,\r\n            config\r\n        )\r\n        \r\n\r\n        dispatch({\r\n            type:ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error){\r\n        dispatch({type:ORDER_LIST_MY_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message, \r\n        \r\n        })\r\n    }\r\n    }\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type:ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin:{userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers :{\r\n                'Content-type' : 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/orders/`,\r\n            config\r\n        )\r\n        \r\n\r\n        dispatch({\r\n            type:ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error){\r\n        dispatch({type:ORDER_LIST_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message, \r\n        \r\n        })\r\n    }\r\n    }\r\n\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nfunction CheckOutSteps({step1, step2, step3, step4}) {\r\n    return (\r\n        <Nav className=\"justify-content-center mb-4\">\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to=\"/login\">\r\n                        <Nav.Link>Login</Nav.Link>\r\n\r\n                    </LinkContainer>\r\n                ):(\r\n                    <Nav.Link disabled>Login</Nav.Link>\r\n                )}\r\n                \r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to=\"/shipping\">\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n\r\n                    </LinkContainer>\r\n                ):(\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n                \r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to=\"/payment\">\r\n                        <Nav.Link>Payment</Nav.Link>\r\n\r\n                    </LinkContainer>\r\n                ):(\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n                \r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to=\"/placeorder\">\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n\r\n                    </LinkContainer>\r\n                ):(\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n                \r\n            </Nav.Item>\r\n            \r\n        </Nav>\r\n    );\r\n}\r\n\r\nexport default CheckOutSteps;","import React, {useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Form} from 'react-bootstrap';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckOutSteps from '../components/CheckOutSteps';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\n\r\nfunction ShippingScreen({history}) {\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const {shippingAddress} = cart;\r\n    console.log(shippingAddress);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(saveShippingAddress({address,city,postalCode,country}))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckOutSteps step1 step2/>\r\n            <h1>Shipping page</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type='text'\r\n                    placeholder='Enter Address'\r\n                    // value={address ? address :''}\r\n                    value={address}\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type='text'\r\n                    placeholder='Enter City'\r\n                    value={city ? city :''}\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='postalCOde'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type='text'\r\n                    placeholder='Enter Postal Code'\r\n                    value={postalCode ? postalCode :''}\r\n                    onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type='text'\r\n                    placeholder='Enter Country'\r\n                    value={country ? country :''}\r\n                    onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    );\r\n}\r\n\r\nexport default ShippingScreen;","import React, {useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Form, Col} from 'react-bootstrap';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckOutSteps from '../components/CheckOutSteps';\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\n\r\n\r\n\r\nfunction PaymentScreen({history}) {\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const {shippingAddress} = cart;\r\n    const dispatch = useDispatch()\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if(!shippingAddress.address){\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckOutSteps step1 step2 step3/>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) =>setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n            \r\n        </FormContainer>\r\n    );\r\n}\r\n\r\nexport default PaymentScreen;","import React, {useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Col,Image, Card, ListGroup,Row} from 'react-bootstrap';\r\nimport Message from '../components/Message';\r\nimport CheckOutSteps from '../components/CheckOutSteps';\r\nimport { createOrder } from '../actions/orderActions';\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\r\n\r\nfunction PlaceOrderScreen({history}) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    cart.itemsPrice = cart.cartItems.reduce((acc,item)=> acc+item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10)\r\n    cart.taxPrice = (cart.itemsPrice * 0.082).toFixed(2)\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = ()=>{\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckOutSteps step1 step2 step3 step4/>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                                {' '}\r\n                                {cart.shippingAddress.postalCode}\r\n                                {' '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                                </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item,index)=>(\r\n                                            <ListGroup.Item key={item}>\r\n                                                <Row>\r\n                                                    <Col md={1} xl={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Item: </Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping: </Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax: </Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total: </Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlaceOrderScreen;","import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col,Image, Card, ListGroup,Row, Button} from 'react-bootstrap';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions';\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\r\n\r\n\r\nfunction OrderScreen({match, history}) {\r\n\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading:loadingPay, success:successPay } = orderPay\r\n    \r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading:loadingDeliver, success:successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    \r\n\r\n    if(!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc,item)=> acc+item.price * item.qty, 0).toFixed(2)\r\n    }\r\n    \r\n    //AeDM8PlgKzjI-OKO6SkTG9-A--DO2WztmPvyW6z9xwy0vox1A7CDp8yizwpcI0fsrDU4yYcwFW3RChXF\r\n\r\n    const addPayPalScript = () =>{\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDM8PlgKzjI-OKO6SkTG9-A--DO2WztmPvyW6z9xwy0vox1A7CDp8yizwpcI0fsrDU4yYcwFW3RChXF'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n        if(!order || successPay || order._id !== Number(orderId) || successDeliver){\r\n            dispatch({ type:ORDER_PAY_RESET })\r\n            dispatch({ type:ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        }else if(!order.isPaid){\r\n            if(!window.paypal){\r\n                addPayPalScript()\r\n            }else{\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    \r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        \r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        \r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n\r\n    return loading ? (\r\n        <Loader/>\r\n    ) : \r\n        error ? ( \r\n            <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n                <div>\r\n                    <h1>Order : {order._id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n                                    <p><strong>Name : </strong>{order.user.name}</p>\r\n                                    <p><strong>Email : </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Shipping: </strong>\r\n                                        {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                                        {' '}\r\n                                        {order.shippingAddress.postalCode}\r\n                                        {' '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n                                    {order.isDelivered ?(\r\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                        <Message variant='warning'>Not Delivered</Message>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Method</h2>\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ?(\r\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    ) : (\r\n                                        <Message variant='warning'>Not Paid</Message>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        Your order is empty\r\n                                        </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item,index)=>(\r\n                                                    <ListGroup.Item key={item}>\r\n                                                        <Row>\r\n                                                            <Col md={1} xl={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                            </Col>\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Item: </Col>\r\n                                            <Col>${order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping: </Col>\r\n                                            <Col>${order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax: </Col>\r\n                                            <Col>${order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total: </Col>\r\n                                            <Col>${order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader/>}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Loader/>\r\n                                            ):(\r\n                                                <PayPalButton\r\n                                                amount={order.totalPrice}\r\n                                                onSuccess={successPaymentHandler}\r\n                                                />\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                    \r\n                                </ListGroup>\r\n                                {loadingDeliver && <Loader/>}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                  <ListGroup.Item>\r\n                                      <Button \r\n                                        type='button'\r\n                                        className='btn btn-block'\r\n                                        onClick={deliverHandler}\r\n                                      >\r\n                                          Mark As Deliver\r\n                                      </Button>\r\n                                  </ListGroup.Item>  \r\n                                )}\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            );\r\n}\r\n\r\nexport default OrderScreen;","import React, {useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button} from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listUsers, deleteUser } from '../actions/userActions';\r\n\r\nfunction UserListScreen({history}) {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const {loading, error, users} = userList\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const {success:successDelete} = userDelete\r\n\r\n    useEffect(() =>{\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n        \r\n    },[dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id)=>{\r\n        if(window.confirm('Are you sure you want to delete this account?')){\r\n            dispatch(deleteUser(id))\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            { loading \r\n                ? (<Loader/>) \r\n                : error \r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                                \r\n                            </thead>\r\n                            <tbody>\r\n                                {users.map(user =>(\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin?(\r\n                                            <i className='fas fa-check' style={{color:'green'}}></i>\r\n                                        ):(\r\n                                            <i className='fas fa-check' style={{color:'red'}}></i>\r\n                                        )}</td>\r\n                                        <td><LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                            <Button variant='danger' className='btn-sm' onClick={()=>deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                            </td>\r\n                                            \r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserListScreen;","import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Form,Row, Col } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { getUserDetails, updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nconst UserEditScreen = ({match, history}) => {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    \r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const {error:errorUpdate, loading:loadingUpdate, success:successUpdate} = userUpdate\r\n\r\n    useEffect(() =>{\r\n        if(successUpdate){\r\n            dispatch({type:USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        }else{\r\n            if(!user.name || user._id !== Number(userId)){\r\n                dispatch(getUserDetails(userId))\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log('isAdmin :',isAdmin);\r\n        dispatch(updateUser({_id:user._id,name,email,isAdmin}))\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n            <h1>Edit User</h1>\r\n            {loadingUpdate && <Loader/>}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='isadmin'>\r\n                        <Form.Check\r\n                        type='checkbox'\r\n                        label='Is Admin'\r\n                        checked={isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                        </Form.Group>\r\n                    \r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n                )}\r\n                \r\n            </FormContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserEditScreen;","import React, {useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col, Image} from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Paginate from '../components/Paginate';\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions';\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\r\n\r\nfunction ProductListScreen({history, match}) {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, error, products, pages, page} = productList\r\n\r\n    \r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const {loading:loadingDelete, error:errorDelete, success:successDelete} = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const {loading:loadingCreate, error:errorCreate, success:successCreate, product:createdProduct} = productCreate\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() =>{\r\n        dispatch({type: PRODUCT_CREATE_RESET})\r\n        if(!userInfo.isAdmin){\r\n            history.push('/login')\r\n        }\r\n        if(successCreate){\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        }else{\r\n            dispatch(listProducts(keyword))\r\n        }\r\n        \r\n    },[dispatch, history, userInfo, successDelete,successCreate,createdProduct,keyword])\r\n\r\n    const deleteHandler = (id)=>{\r\n        if(window.confirm('Are you sure you want to delete this product?')){\r\n            dispatch(deleteProduct(id))\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n    const createProductHandler = () =>{\r\n        console.log(\"hello\");\r\n        // dispatch(createProduct())\r\n        history.push(`/admin/product/create`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col> \r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n\r\n            </Row>\r\n            {loadingDelete && <Loader/>}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n            {loadingCreate && <Loader/>}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            { loading \r\n                ? (<Loader/>) \r\n                : error \r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>PRICE</th>\r\n                                    <th>CATEGORY</th>\r\n                                    <th>BRAND</th>\r\n                                    <th>STOCK</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                                \r\n                            </thead>\r\n                            <tbody>\r\n                                {products.map(product =>(\r\n                                    <tr key={product._id}>\r\n                                        <td>{product._id}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>${product.price}</td>\r\n                                        <td>{product.category}</td>\r\n                                        <td>{product.brand}</td>\r\n                                        <td>{product.countInStock}</td>\r\n                                        \r\n                                        <td><LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                            <Button variant='danger' className='btn-sm' onClick={()=>deleteHandler(product._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                            </td>\r\n                                            \r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                        <Paginate page={page} pages={pages}isAdmin={true}/>\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductListScreen;","import axios from 'axios';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Form,Row, Col } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { listProductDetails, updateProduct, createProduct } from '../actions/productActions';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\nconst ProductEditScreen = ({match, history}) => {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n    \r\n    \r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {error, loading, product} = productDetails\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const {loading:loadingCreate, error:errorCreate, success:successCreate, product:createdProduct} = productCreate\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const {error:errorUpdate, loading:loadingUpdate, success:successUpdate} = productUpdate\r\n\r\n    useEffect(() =>{\r\n        if(successUpdate){\r\n            dispatch({type: PRODUCT_UPDATE_RESET})\r\n            history.push('/admin/productlist')\r\n        }else{\r\n            if(!product.name || product._id !== Number(productId)){\r\n                dispatch(listProductDetails(productId))\r\n            }else{\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n       \r\n            \r\n        \r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id:productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n        \r\n    }\r\n\r\n    const uploadFileHandler = async(e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n        \r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers :{\r\n                    'Content-type': 'multipart/form-data'\r\n                }\r\n            }\r\n            const {data} = await axios.post('/api/products/upload/', formData, config)\r\n            setImage(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n    const createProductHandler = () =>{\r\n        dispatch(createProduct({\r\n            _id:productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }));\r\n        history.push(`/admin/product/create`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n            <h1>Edit Product</h1>\r\n            {loadingUpdate && <Loader/>}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='price'>\r\n                        <Form.Label>Enter Price</Form.Label>\r\n                        <Form.Control\r\n                        type='number'\r\n                        placeholder='Enter Price'\r\n                        value={price}\r\n                        onChange={(e) => setPrice(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='image'>\r\n                        <Form.Label>Image</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter Image'\r\n                            value={image}\r\n                            onChange={(e) => setImage(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                        <Form.File\r\n                            id='image-file'\r\n                            label='Choose File'\r\n                            custom\r\n                            onChange={uploadFileHandler}\r\n                        >\r\n\r\n                         </Form.File>\r\n                         {uploading && <Loader/>}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='brand'>\r\n                        <Form.Label>Brand</Form.Label>\r\n                        <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Brand'\r\n                        value={brand}\r\n                        onChange={(e) => setBrand(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='category'>\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Category'\r\n                        value={category}\r\n                        onChange={(e) => setCategory(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='countinstock'>\r\n                        <Form.Label>Stock</Form.Label>\r\n                        <Form.Control\r\n                        type='number'\r\n                        placeholder='Enter Stock'\r\n                        value={countInStock}\r\n                        onChange={(e) => setCountInStock(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='description'>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Description'\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n                )}\r\n                \r\n            </FormContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductEditScreen;","import React, {useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button} from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport {listOrders } from '../actions/orderActions';\r\n\r\nfunction OrderListScreen({history}) {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const {loading, error, orders} = orderList\r\n\r\n    \r\n    useEffect(() =>{\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n        \r\n    },[dispatch, history, userInfo])\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            { loading \r\n                ? (<Loader/>) \r\n                : error \r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>TOTAL</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                                \r\n                            </thead>\r\n                            <tbody>\r\n                                {orders.map(order =>(\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0,10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n                                        <td>{order.isPaid?(\r\n                                            order.paidAt.substring(0,10)\r\n                                        ):(\r\n                                            <i className='fas fa-check' style={{color:'red'}}></i>\r\n                                        )}</td>\r\n                                        <td>{order.isDelivered?(\r\n                                            order.deliveredAt.substring(0,10)\r\n                                        ):(\r\n                                            <i className='fas fa-check' style={{color:'red'}}></i>\r\n                                        )}</td>\r\n     \r\n                                        <td><LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            </td>\r\n                                            \r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderListScreen;","import axios from 'axios';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Form,Row, Col } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { listProductDetails,listProducts, updateProduct,createProduct } from '../actions/productActions';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\nconst ProductCreateScreen = ({match, history}) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n    \r\n    \r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const {loading:loadingCreate, error:errorCreate, success:successCreate, product:createdProduct} = productCreate\r\n    \r\n    useEffect(() =>{\r\n        \r\n      if(successCreate){\r\n        console.log(\"hello\")\r\n        // history.push(`/`)\r\n        history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    }else{\r\n        dispatch(listProducts(''))\r\n    }\r\n    \r\n},[dispatch, history, userInfo,successCreate,createdProduct])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    \r\n\r\n    const uploadFileHandler = async(e) => {\r\n        const file = e.target.files[0]\r\n        console.log(e.target.files)\r\n        setImage(file)\r\n        // let formData = new FormData()\r\n        // formData.append('image', file)\r\n        // formData.append('name', file.name)\r\n        // console.log(formData);\r\n        \r\n        setUploading(true)\r\n\r\n        // try {\r\n        //     const config = {\r\n        //         headers :{\r\n        //             'Content-type': 'multipart/form-data'\r\n        //         }\r\n        //     }\r\n        //     // const {data} = await axios.post('/api/products/upload/', formData, config)\r\n        //     setImage(formData)\r\n        //     setUploading(false)\r\n        // } catch (error) {\r\n        //     setUploading(false)\r\n        // }\r\n    }\r\n    const createProductHandler = async(e) =>{\r\n      e.preventDefault()\r\n    //   dispatch(createProduct({\r\n    //     // _id:productId,\r\n    //     name,\r\n    //     price,\r\n    //     image,\r\n    //     brand,\r\n    //     category,\r\n    //     countInStock,\r\n    //     description\r\n    // }));\r\n    const formData = new FormData();\r\n    formData.append('name',name)\r\n    formData.append('price',price)\r\n    formData.append('image',image)\r\n    formData.append('brand',brand)\r\n    formData.append('category',category)\r\n    formData.append('countInStock',countInStock)\r\n    formData.append('description',description)\r\n    dispatch(createProduct(formData))\r\n    \r\n    // try {\r\n    //       const config = {\r\n    //           headers :{\r\n    //               'Content-type': 'multipart/form-data',\r\n    //               Authorization : `Bearer ${userInfo.token}`\r\n    //           }\r\n    //       }\r\n    //       setUploading(true)\r\n    //       const {data} = await axios.post('/api/products/create/', formData, config)\r\n    //       if(data){\r\n    //         setUploading(false)\r\n    //       }\r\n          \r\n    //   } catch (error) {\r\n    //       setUploading(false)\r\n    //   }\r\n      // if(data){\r\n        history.push(`/`)\r\n      // }\r\n        // history.push(`/admin/product/create`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n            <h1>Edit Product</h1>\r\n            {/* {loadingUpdate && <Loader/>} */}\r\n            {/* {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>} */}\r\n                {/* {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : ( */}\r\n                   { <Form onSubmit={createProductHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='price'>\r\n                        <Form.Label>Enter Price</Form.Label>\r\n                        <Form.Control\r\n                        type='number'\r\n                        placeholder='Enter Price'\r\n                        value={price}\r\n                        onChange={(e) => setPrice(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='image'>\r\n                        <Form.Label>Image</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter Image'\r\n                            value={image}\r\n                            onChange={(e) => setImage(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                        <Form.File\r\n                            id='image-file'\r\n                            label='Choose File'\r\n                            custom\r\n                            onChange={uploadFileHandler}\r\n                        >\r\n\r\n                         </Form.File>\r\n                         {/* {uploading && <Loader/>} */}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='brand'>\r\n                        <Form.Label>Brand</Form.Label>\r\n                        <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Brand'\r\n                        value={brand}\r\n                        onChange={(e) => setBrand(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='category'>\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Category'\r\n                        value={category}\r\n                        onChange={(e) => setCategory(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='countinstock'>\r\n                        <Form.Label>Stock</Form.Label>\r\n                        <Form.Control\r\n                        type='number'\r\n                        placeholder='Enter Stock'\r\n                        value={countInStock}\r\n                        onChange={(e) => setCountInStock(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='description'>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Description'\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Button type='submit' variant='primary'>\r\n                        Create\r\n                    </Button>\r\n                </Form>\r\n                }\r\n                \r\n            </FormContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductCreateScreen;","import Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\nimport ProductCreateScreen from \"./screens/ProductCreateScreen\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n        <Route path=\"/\" component={HomeScreen} exact/>\n        <Route path=\"/login\" component={LoginScreen}/>\n        <Route path=\"/register\" component={RegisterScreen}/>\n        <Route path=\"/profile\" component={ProfileScreen}/>\n        <Route path=\"/shipping\" component={ShippingScreen}/>\n        <Route path=\"/payment\" component={PaymentScreen}/>\n        <Route path=\"/placeorder\" component={PlaceOrderScreen}/>\n        <Route path=\"/order/:id\" component={OrderScreen} />\n        <Route path=\"/product/:id\" component={ProductScreen} />\n        <Route path=\"/cart/:id?\" component={CartScreen} />\n\n        <Route path=\"/admin/userlist\" component={UserListScreen} />\n        <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n\n        <Route path=\"/admin/productlist\" component={ProductListScreen} />\n        <Route path=\"/admin/product/create\" component={ProductCreateScreen} />\n        <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n        \n        \n        <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n        </Container>\n        \n      </main>\n      \n      <Footer /> \n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}